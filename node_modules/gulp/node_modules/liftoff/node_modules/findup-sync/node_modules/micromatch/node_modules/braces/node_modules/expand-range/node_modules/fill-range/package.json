{
  "name": "fill-range",
  "description": "Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`",
  "version": "3.0.3",
  "homepage": "https://github.com/jonschlinkert/fill-range",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "contributors": [
    {
      "name": "Jon Schlinkert",
      "email": "jon.schlinkert@sellside.com",
      "url": "http://twitter.com/jonschlinkert"
    },
    {
      "name": "Paul Miller",
      "email": "paul+gh@paulmillr.com",
      "url": "paulmillr.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "jonschlinkert/fill-range"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/fill-range/issues"
  },
  "license": "MIT",
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "extend-shallow": "^2.0.1",
    "is-number": "^3.0.0",
    "repeat-string": "^1.5.4",
    "to-regex-range": "^0.2.0"
  },
  "devDependencies": {
    "gulp-format-md": "^0.1.10",
    "mocha": "^3.0.2"
  },
  "keywords": [
    "array",
    "alpha",
    "alphabetical",
    "bash",
    "brace",
    "expand",
    "expansion",
    "fill",
    "glob",
    "match",
    "matches",
    "matching",
    "number",
    "numerical",
    "regex",
    "range",
    "ranges",
    "sh"
  ],
  "verb": {
    "related": {
      "list": [
        "braces",
        "to-regex-range",
        "expand-range",
        "micromatch"
      ]
    },
    "toc": true,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    },
    "reflinks": [
      "verb",
      "verb-generate-readme"
    ]
  },
  "readme": "# fill-range [![NPM version](https://img.shields.io/npm/v/fill-range.svg?style=flat)](https://www.npmjs.com/package/fill-range) [![NPM downloads](https://img.shields.io/npm/dm/fill-range.svg?style=flat)](https://npmjs.org/package/fill-range) [![Build Status](https://img.shields.io/travis/jonschlinkert/fill-range.svg?style=flat)](https://travis-ci.org/jonschlinkert/fill-range)\n\n> Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n  * [Invalid ranges](#invalid-ranges)\n  * [Custom function](#custom-function)\n- [About](#about)\n  * [Related projects](#related-projects)\n  * [Contributing](#contributing)\n  * [Building docs](#building-docs)\n  * [Running tests](#running-tests)\n  * [Author](#author)\n  * [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save fill-range\n```\n\n## Usage\n\nExpands numbers and letters, optionally using a `step` as the last argument. _(Numbers may be defined as JavaScript numbers or strings)_.\n\n```js\nvar fill = require('fill-range');\n\nconsole.log(fill('a', 'e'));\n//=> ['a', 'b', 'c', 'd', 'e']\n\nconsole.log(fill(0, 25, 5));\n//=> [ 0, 5, 10, 15, 20, 25 ]\n\nconsole.log(fill('a', 'e', {toRegex: true}));\n//=> '[a-e]'\n\nconsole.log(fill('a', 'z', 3, {toRegex: true}));\n//=> 'a|d|g|j|m|p|s|v|y'\n\nconsole.log(fill('1', '100', {toRegex: true}));\n//=> '[1-9]|[1-9][0-9]|100'\n```\n\nCreate regex-compatible ranges (returns a string, which can be used however you need to create a regex):\n\n```js\nconsole.log(fill('a', 'e', {toRegex: true}));\n//=> '[a-e]'\n\nconsole.log(fill('a', 'z', 3, {toRegex: true}));\n//=> 'a|d|g|j|m|p|s|v|y'\n\nconsole.log(fill('1', '100', {toRegex: true}));\n//=> '[1-9]|[1-9][0-9]|100'\n```\n\n**Params**\n\n```js\nfill(start, stop, step, options, fn);\n```\n\n* `start`: **{String|Number}** the number or letter to start with\n* `end`: **{String|Number}** the number or letter to end with\n* `step`: **{String|Number}** optionally pass the step to use. works for letters or numbers.\n* `options`: **{Object}**:\n  - `toRegex`: return a regex-compatible string (still returned as an array for consistency)\n  - `step`: pass the step on the options as an alternative to passing it as an argument\n  - `strict`: `undefined` by default, set to true to throw errors on invalid ranges.\n* `fn`: **{Function}** optionally [pass a function](#custom-function) to modify each character. This can also be defined as `options.transform`\n\n**Examples**\n\n```js\nfill(1, 3)\n//=> ['1', '2', '3']\n\nfill('1', '3')\n//=> ['1', '2', '3']\n\nfill('0', '-5')\n//=> [ '0', '-1', '-2', '-3', '-4', '-5' ]\n\nfill(-9, 9, 3)\n//=> [ '-9', '-6', '-3', '0', '3', '6', '9' ])\n\nfill('-1', '-10', '-2')\n//=> [ '-1', '-3', '-5', '-7', '-9' ]\n\nfill('1', '10', '2')\n//=> [ '1', '3', '5', '7', '9' ]\n\nfill('a', 'e')\n//=> ['a', 'b', 'c', 'd', 'e']\n\nfill('a', 'e', 2)\n//=> ['a', 'c', 'e']\n\nfill('A', 'E', 2)\n//=> ['A', 'C', 'E']\n```\n\n### Invalid ranges\n\nWhen an invalid range is passed, `null` is returned.\n\n```js\nfill('1.1', '2');   // decimals not supported in ranges\n//=> null\n\nfill('a', '2');     // unmatched values\n//=> null\n\nfill(1, 10, 'foo'); // invalid step\n//=> null\n```\n\nIf you want errors to be throw, set `options.strict` to true.\n\n### Custom function\n\nOptionally pass a custom function as last argument or on `options.transform`.\n\n```js\n// increase padding by two\nvar arr = fill('01', '05', function(val, a, b, step, idx, arr, options) {\n  return repeat('0', (options.maxLength + 2) - val.length) + val;\n});\n\nconsole.log(arr);\n//=> ['0001', '0002', '0003', '0004', '0005']\n```\n\n## About\n\n### Related projects\n\n* [braces](https://www.npmjs.com/package/braces): Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces… [more](https://github.com/jonschlinkert/braces) | [homepage](https://github.com/jonschlinkert/braces \"Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification.\")\n* [expand-range](https://www.npmjs.com/package/expand-range): Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. See… [more](https://github.com/jonschlinkert/expand-range) | [homepage](https://github.com/jonschlinkert/expand-range \"Fast, bash-like range expansion. Expand a range of numbers or letters, uppercase or lowercase. See the benchmarks. Used by micromatch.\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/jonschlinkert/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [to-regex-range](https://www.npmjs.com/package/to-regex-range): Returns a regex-compatible range from two numbers, min and max, with 855,412 generated unit tests… [more](https://github.com/jonschlinkert/to-regex-range) | [homepage](https://github.com/jonschlinkert/to-regex-range \"Returns a regex-compatible range from two numbers, min and max, with 855,412 generated unit tests to validate it's accuracy! Useful for creating regular expressions to validate numbers, ranges, years, etc. Returns a string, allowing the returned value to \")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This document was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme) (a [verb](https://github.com/verbose/verb) generator), please don't edit the readme directly. Any changes to the readme must be made in [.verb.md](.verb.md).)_\n\nTo generate the readme and API documentation with [verb](https://github.com/verbose/verb):\n\n```sh\n$ npm install -g verb verb-generate-readme && verb\n```\n\n### Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm install -d && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2016, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT license](https://github.com/jonschlinkert/fill-range/blob/master/LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.1.30, on September 15, 2016._",
  "readmeFilename": "README.md",
  "_id": "fill-range@3.0.3",
  "dist": {
    "shasum": "28d36534c17ff276548a2a038555c90ad0567043"
  },
  "_from": "fill-range@^2.1.0",
  "_resolved": "https://registry.npmjs.org/fill-range/-/fill-range-3.0.3.tgz"
}
